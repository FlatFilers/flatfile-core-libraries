import { EventHandler } from '../utils/event.handler'
import { List, SpaceConfig } from './SpaceConfig'
import { Mountable } from '../utils/mountable'
import _ from 'lodash'
import Blueprint from '@flatfile/blueprint'

/**
 * Generate a new space configuration for Flatfile. Space configurations
 * are used as a template when creating a new space as well as handle the routing
 * of events generated by Flatfile.
 */
export class Agent extends EventHandler implements Mountable {
  constructor(public readonly options: ConfigurationOptions) {
    super()

    _.map(options.spaceConfigs, (value, key) => {
      this.addNode(value, key)
    })
  }

  blueprints() {
    return this.options.blueprints
  }

  mount() {
    return this
  }
}

interface ConfigurationOptions {
  name?: string
  description?: string
  spaceConfigs: List<SpaceConfig> // this should probably be like "templates"'
  blueprints?: (typeof Blueprint)[]
}
